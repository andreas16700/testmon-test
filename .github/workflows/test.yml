name: Tests (pytest + testmon)

on:
  push:
    branches: [ main ]
  workflow_dispatch:


defaults:
  run:
    shell: bash

env:
  PY_VERSION: "3.12"
  TESTMON_PERSIST_ROOT: "/Users/andreasloizides/tmdata"
  JOB_ID: "job_0"

jobs:
  test:
    name: "pytest --testmon"

    runs-on: [ self-hosted, macOS ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Create a tiny requirements file so setup-python can key the pip cache properly.
      - name: Write CI requirements
        run: |
          printf "pytest\npytest-testmon\ncoverage\n" > requirements-ci.txt

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PY_VERSION }}
          cache: "pip"
          cache-dependency-path: "requirements-ci.txt"

      - name: Upgrade pip tooling & install deps (from cache when possible)
        run: |
          python -m pip install --upgrade pip setuptools wheel
          python -m pip install -r requirements-ci.txt

      - name: Restore testmon data (if present)
        run: |
          set -euo pipefail
          REPO_NAME="${{ github.event.repository.name }}"
          PERSIST_DIR="$TESTMON_PERSIST_ROOT/$REPO_NAME/$JOB_ID"
          echo "Testmon persist dir: $PERSIST_DIR"
          mkdir -p "$PERSIST_DIR"
          shopt -s nullglob || true
          files=("$PERSIST_DIR"/.testmondata*)
          if [ ${#files[@]} -gt 0 ]; then
            echo "Found existing testmon DB: ${files[*]}"
            cp -v "$PERSIST_DIR"/.testmondata* "$GITHUB_WORKSPACE"/
          else
            echo "No existing testmon DB found; first run will build it."
          fi

      - name: Run tests with testmon
        run: |
          pytest --testmon -q

      - name: Persist updated testmon data
        if: ${{ always() }}
        run: |
          set -euo pipefail
          REPO_NAME="${{ github.event.repository.name }}"
          PERSIST_DIR="$TESTMON_PERSIST_ROOT/$REPO_NAME/$JOB_ID"
          mkdir -p "$PERSIST_DIR"
          shopt -s nullglob || true
          files=("$GITHUB_WORKSPACE"/.testmondata*)
          if [ ${#files[@]} -gt 0 ]; then
            echo "Saving testmon DB to $PERSIST_DIR"
            cp -v "$GITHUB_WORKSPACE"/.testmondata* "$PERSIST_DIR"/
          else
            echo "No .testmondata files produced."
          fi
